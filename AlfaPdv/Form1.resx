<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACAYEAAgGBAAIBgQACAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAY
        EAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQACAY
        EAAgGBAAIBgQAAAAAAAAAAAAIBgQACAYEAEgGBADJR4PACEZEAAgGBAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfGBEAIBgQACAY
        EAAgGBACIBgQAiAYEAAgGBAAIBgQAAAAAAAgGBAAIBgQAiAYEAAgGBAKIBgQEiAYEBAgGBAQIBgQECAY
        EBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAY
        EBAgGBARIBgQDiAYEAEgGBABIBgQASAYEAAgGBAAAAAAACAYEAAgGBAHIBgQkCAYEOggGBDuIBgQ8SAY
        EPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAY
        EPIgGBDyIBgQ8iAYEPIgGBDxIBgQwiAYEC8gGBAAIBgQAiAYEAAfFhAAIBgQACAYEI4gGBD/IBgQ/CAY
        EP8gGBD0IBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAY
        EPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8SAYEPUgGBD/IBgQ4CAYEBIgGBAAIBgQASAYEAAgGBAJIBgQ4iAY
        EPUgGBDXIBgQ/yAYEGIgGBABIBgQFCAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAY
        EBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBEgGBAQIBgQECAYEL0gGBD/IBgQVyAYEAAgGBADIBgQACAY
        EBEgGBDwIBgQ4SAYEI4gGBD/IBgQiSAYEAAgGBAEIBgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgQACAYEAQgGBAAIBgQdCAYEP8gGBCLIBgQACAY
        EAQgGBAAIBgQESAYEPEgGBDlIBgQWyAYEP8gGBC+IBgQACAYEAMgGBABIBgQASAYEAEgGBABIBgQASAY
        EAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQBCAYEAAgGBBCIBgQ/yAY
        EMEgGBAAIBgQASAYEAAgGBARIBgQ8CAYEOwgGBAvIBgQ+SAYEOwgGBAOIBgQACAYEAEgGBAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYEAAgGBABIBgQACAY
        EBkgGBD4IBgQ7yAYEBEgGBAAIBgQASAYEBEgGBDuIBgQ8yAYEBEgGBDQIBgQ/yAYEDIgGBAAIBgQAiAY
        EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAY
        EAAgGBEAIBgQACAYEM0gGBD/IBgQOCAYEAAgGBADIBgQESAYEO4gGBD2IBgQAiAYEJ0gGBD/IBgQYSAY
        EAAgGBAEIBgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIBgQACAYEAQgGBAAIBgQmiAYEP8gGBBqIBgQACAYEAQgGBARIBgQ7iAYEPcgGBAAIBgQaCAY
        EP8gGBCWIBgQACAYEAQgGBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAgGBAAIBgQBCAYEAAgGBBlIBgQ/yAYEKAgGBAAIBgQBCAYEBEgGBDuIBgQ9iAY
        EAQgGBA2IBgQ/yAYEMkgGBAAIBgQASAYEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYEAAgGBADIBgQACAYEDUgGBD/IBgQ0z4RAgAgGBAAIBgQESAY
        EO4gGBD0IBgQCyAYEA8gGBDzIBgQ9CAYEBUgGBAAIBgQASAZEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgQACAYEAEgGBAAIBgQDyAYEOwgGBD9IBgQHSAY
        EAAgGBARIBgQ7iAYEPQgGBARIBgQACAYEMYgGBD/IBgQPSAYEAAgGBAEIBgQASAYEAEgGBABIBgQASAY
        EAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAMgGBAAIBgQvyAY
        EP8gGBBIIBgQACAYEBEgGBDuIBgQ8yAYEBQgGBAAIBgQkSAYEP8gGBBtIBgQACAYEAQgGBAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGBAAIBgQBCAY
        EAAgGBCJIBgQ/yAYEHsgGBAAIBgQESAYEO4gGBDzIBgQFCAYEAAgGBBcIBgQ/yAYEKYgGBACIBgQEyAY
        EBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAY
        EBAgGBAUIBgQASAYEGAgGBD/IBgQriAYEAAgGBARIBgQ7iAYEPMgGBASIBgQACAYEC8gGBD/IBgQ/CAY
        EPEgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAY
        EPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEP8gGBDgIBgQCyAYEBEgGBDuIBgQ8yAYEBEgGBAAIBgQBSAY
        EL0gGBD3IBgQ8CAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8yAYEPMgGBDzIBgQ8yAYEPMgGBDzIBgQ8yAY
        EPMgGBDzIBgQ8yAYEPMgGBDzIBgQ8yAYEPMgGBDvIBgQ9yAYELsgGBAEIBgQESAYEO4gGBDzIBgQECAY
        EAAgGBABIBgQBiAYEBIgGBAQIBgQECAYEBAgGBAQIBgQESAYEBIgGBAMIBgQDCAYEAwgGBAMIBgQDCAY
        EAwgGBAMIBgQDCAYEAwgGBAMIBgQDCAYEAwgGBALIBgQECAYEBEgGBASIBgQBiAYEAAgGBARIBgQ7iAY
        EPMgGBAQIBgQACAYEAIgGBABIBgQACAYEAAAAAAAAAAAACAYEAAgGBAAIRgQASAYEAsgGBAMIBgQDCAY
        EAwgGBAMIBgQDCAYEAwgGBAMIBgQDCAYEAwgGBAMIBgQDCAYEAwgGBADIBgQACAYEAAgGBABIBgQASAY
        EBEgGBDuIBgQ8yAYEBAgGBAAIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQBSAYEAAgGBCEIBgQ+CAY
        EPIgGBDzIBgQ8yAYEPMgGBDzIBgQ8yAYEPMgGBDzIBgQ8yAYEPMgGBDxIBgQ/CAYEMMgGBADIBgQACAY
        EAEgGBAAIBgQESAYEO0gGBD0IBgQEiAYEAAgGBACIBgQASAYEAEgGBABIBgQASAYEAUgGBAAIBgQZSAY
        EP8gGBD6IBgQ8SAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPIgGBDyIBgQ8iAYEPAgGBD7IBgQwiAY
        EAIgGBAAIBgQAQAAAAAgGBARIBgQ7CAYEPMgGBAQIBgQACAYEAEAAAAAAAAAACAYEAAgGBACIBgQACAY
        EEIgGBD6IBgQ/yAYEGcgGBAEIBgQEyAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAYEBAgGBAQIBgQECAY
        EBEgGBAFIBgQACAYEAAAAAAAAAAAACAYEAkgGBDfIBgQ/yAYEEMgGBAHIBgQEiAYEBAgGBAQIBgQEiAY
        EAsgGBAsIBgQ5SAYEP8gGBCKIBgQACAYEAIgGBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgGBAAIBgQACAYEAEgGBAAIBgQACAYEAAAAAAAIBgQACAYEI4gGBD/IBgQ+CAYEPIgGBDyIBgQ8iAY
        EPIgGBDyIBgQ8SAYEPUgGBD/IBgQryAXEAAgGBACIBgQAiAYEAEgGBABIBgQASAYEAEgGBABIBgQASAY
        EAEgGBABIBgQASAYEAEgGBABIBgQASAYEAAgGBAAIBgQAAAAAAAgGBAAIBgQByAYEJAgGBDqIBgQ8iAY
        EPIgGBDyIBgQ8iAYEPIgGBDxIBgQ9iAYEMEgGBAQIBgQACAYEAEgGBAAIBgQAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYEAAgGBABIBgQACAY
        EAkgGBARIBgQECAYEBAgGBAQIBgQECAYEBAgGBASIBgQBiAYEAEgGBABIBgQACAYEAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgQACAY
        EAEgGBADIRIVACAXEQAgGBAAAAAAAAAAAAAAAAAAIBgQACAYEAAgGBABIBgQASAYEAAgGBAAIBgQAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgGBAAIBgQACAYEAAgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBABIBgQASAYEAEgGBAAIBgQACAY
        EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////0AAABeL//9LIAAABYAAAAmAAAAFAAAABAJ//0QCAABEAX//QgF/
        /yIBP/8iET//IgE//6EAv/+hCIAAEQi//5EIAAABCAAAAAgAAAAIAAABCWgADAgIAAEIEAAFCyAACwAC
        f6WABAALgAV//yAC//+Lpf//QAv///////8=
</value>
  </data>
</root>